/** Declaration file generated by dts-gen */

export class DrizzleProvider {
    constructor(...args: any[]);

    getChildContext(...args: any[]): void;

    render(...args: any[]): void;

}

export function drizzleConnect(t: any, e: any): any;

export namespace DrizzleContext {
    class Provider {
        constructor(...args: any[]);

        componentDidMount(...args: any[]): void;

        componentWillUnmount(...args: any[]): void;

        render(...args: any[]): void;

    }

    const Consumer: {
        $$typeof: any;
        Consumer: any;
        Provider: {
            $$typeof: any;
        };
    };

    const Context: {
        $$typeof: any;
        Consumer: {
            $$typeof: any;
            Consumer: any;
            Provider: {
                $$typeof: any;
            };
        };
        Provider: {
            $$typeof: any;
        };
    };

}

export namespace DrizzleProvider {
    namespace childContextTypes {
        function drizzle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function drizzleStore(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

    }

    namespace propTypes {
        function options(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        function store(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        namespace store {
            function isRequired(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

}

export namespace drizzleReactHooks {
    function DrizzleProvider({children:t,drizzle:e}: any): any;

    function Initializer({children:t,error:e,loadingContractsAndAccounts:n,loadingWeb3:r}: any): any;

    function useDrizzle(): void;

    function useDrizzleState(t: any, e: any): any;

    namespace DrizzleProvider {
        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function drizzle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

        }

    }

    namespace Initializer {
        const defaultProps: {
            error: string;
            loadingContractsAndAccounts: string;
            loadingWeb3: string;
        };

        namespace propTypes {
            function children(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function error(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function loadingContractsAndAccounts(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            function loadingWeb3(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): any;

            namespace error {
                // Too-deep object hierarchy from drizzle_react.drizzleReactHooks.Initializer.propTypes.error
                const isRequired: any;

            }

            namespace loadingContractsAndAccounts {
                // Too-deep object hierarchy from drizzle_react.drizzleReactHooks.Initializer.propTypes.loadingContractsAndAccounts
                const isRequired: any;

            }

            namespace loadingWeb3 {
                // Too-deep object hierarchy from drizzle_react.drizzleReactHooks.Initializer.propTypes.loadingWeb3
                const isRequired: any;

            }

        }

    }

}

